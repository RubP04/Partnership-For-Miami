{"ast":null,"code":"var _jsxFileName = \"/home/sakana/Documents/Github/Partnership-For-Miami/React-Native App/WebApp/src/components/LoginScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { View, TextInput, Button, Text, StyleSheet } from 'react-native';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginScreen = ({\n  navigation\n}) => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const handleLogin = () => {\n    // Add your login logic here\n    console.log('Logging in:', {\n      email,\n      password\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(View, {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(TextInput, {\n      style: styles.input,\n      placeholder: \"Email\",\n      value: email,\n      onChangeText: setEmail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n      style: styles.input,\n      placeholder: \"Password\",\n      value: password,\n      onChangeText: setPassword,\n      secureTextEntry: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      title: \"Login\",\n      onPress: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      style: styles.link,\n      onPress: () => navigation.navigate('Sign Up'),\n      children: \"Don't have an account? Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginScreen, \"TSZhDBNy8CmbxXgprY/vvMmTG1Q=\");\n_c = LoginScreen;\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    padding: 16\n  },\n  input: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 12,\n    paddingHorizontal: 10\n  },\n  link: {\n    marginTop: 15,\n    color: 'blue'\n  }\n});\nexport default LoginScreen;\nvar _c;\n$RefreshReg$(_c, \"LoginScreen\");","map":{"version":3,"names":["React","useState","View","TextInput","Button","Text","StyleSheet","jsxDEV","_jsxDEV","LoginScreen","navigation","_s","email","setEmail","password","setPassword","handleLogin","console","log","style","styles","container","children","input","placeholder","value","onChangeText","fileName","_jsxFileName","lineNumber","columnNumber","secureTextEntry","title","onPress","link","navigate","_c","create","flex","justifyContent","padding","height","borderColor","borderWidth","marginBottom","paddingHorizontal","marginTop","color","$RefreshReg$"],"sources":["/home/sakana/Documents/Github/Partnership-For-Miami/React-Native App/WebApp/src/components/LoginScreen.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, TextInput, Button, Text, StyleSheet } from 'react-native';\n\nconst LoginScreen = ({ navigation }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleLogin = () => {\n    // Add your login logic here\n    console.log('Logging in:', { email, password });\n  };\n\n  return (\n    <View style={styles.container}>\n      <TextInput\n        style={styles.input}\n        placeholder=\"Email\"\n        value={email}\n        onChangeText={setEmail}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Password\"\n        value={password}\n        onChangeText={setPassword}\n        secureTextEntry\n      />\n      <Button title=\"Login\" onPress={handleLogin} />\n      <Text style={styles.link} onPress={() => navigation.navigate('Sign Up')}>\n        Don't have an account? Sign Up\n      </Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    padding: 16,\n  },\n  input: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 12,\n    paddingHorizontal: 10,\n  },\n  link: {\n    marginTop: 15,\n    color: 'blue',\n  },\n});\n\nexport default LoginScreen;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,EAAEC,SAAS,EAAEC,MAAM,EAAEC,IAAI,EAAEC,UAAU,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzE,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMe,WAAW,GAAGA,CAAA,KAAM;IACxB;IACAC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAE;MAAEN,KAAK;MAAEE;IAAS,CAAC,CAAC;EACjD,CAAC;EAED,oBACEN,OAAA,CAACN,IAAI;IAACiB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,gBAC5Bd,OAAA,CAACL,SAAS;MACRgB,KAAK,EAAEC,MAAM,CAACG,KAAM;MACpBC,WAAW,EAAC,OAAO;MACnBC,KAAK,EAAEb,KAAM;MACbc,YAAY,EAAEb;IAAS;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACFtB,OAAA,CAACL,SAAS;MACRgB,KAAK,EAAEC,MAAM,CAACG,KAAM;MACpBC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAEX,QAAS;MAChBY,YAAY,EAAEX,WAAY;MAC1BgB,eAAe;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,eACFtB,OAAA,CAACJ,MAAM;MAAC4B,KAAK,EAAC,OAAO;MAACC,OAAO,EAAEjB;IAAY;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9CtB,OAAA,CAACH,IAAI;MAACc,KAAK,EAAEC,MAAM,CAACc,IAAK;MAACD,OAAO,EAAEA,CAAA,KAAMvB,UAAU,CAACyB,QAAQ,CAAC,SAAS,CAAE;MAAAb,QAAA,EAAC;IAEzE;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEX,CAAC;AAACnB,EAAA,CA9BIF,WAAW;AAAA2B,EAAA,GAAX3B,WAAW;AAgCjB,MAAMW,MAAM,GAAGd,UAAU,CAAC+B,MAAM,CAAC;EAC/BhB,SAAS,EAAE;IACTiB,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,OAAO,EAAE;EACX,CAAC;EACDjB,KAAK,EAAE;IACLkB,MAAM,EAAE,EAAE;IACVC,WAAW,EAAE,MAAM;IACnBC,WAAW,EAAE,CAAC;IACdC,YAAY,EAAE,EAAE;IAChBC,iBAAiB,EAAE;EACrB,CAAC;EACDX,IAAI,EAAE;IACJY,SAAS,EAAE,EAAE;IACbC,KAAK,EAAE;EACT;AACF,CAAC,CAAC;AAEF,eAAetC,WAAW;AAAC,IAAA2B,EAAA;AAAAY,YAAA,CAAAZ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}